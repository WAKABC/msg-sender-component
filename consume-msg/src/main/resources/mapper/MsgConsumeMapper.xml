<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wak.consumemsg.mapper.MsgConsumeMapper">
  <resultMap id="BaseResultMap" type="com.wak.consumemsg.entities.MsgConsume">
    <!--@mbg.generated-->
    <!--@Table t_msg_consume-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="producer" jdbcType="VARCHAR" property="producer" />
    <result column="producer_bus_id" jdbcType="VARCHAR" property="producerBusId" />
    <result column="consumer_class_name" jdbcType="VARCHAR" property="consumerClassName" />
    <result column="queue_name" jdbcType="VARCHAR" property="queueName" />
    <result column="body_json" jdbcType="LONGVARCHAR" property="bodyJson" />
    <result column="STATUS" jdbcType="SMALLINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="fail_msg" jdbcType="LONGVARCHAR" property="failMsg" />
    <result column="fail_count" jdbcType="INTEGER" property="failCount" />
    <result column="consume_retry" jdbcType="SMALLINT" property="consumeRetry" />
    <result column="next_retry_time" jdbcType="TIMESTAMP" property="nextRetryTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, producer, producer_bus_id, consumer_class_name, queue_name, body_json, `STATUS`, 
    create_time, fail_msg, fail_count, consume_retry, next_retry_time, update_time
  </sql>

<!--auto generated by MybatisCodeHelper on 2024-10-15-->
  <update id="updateStatusSuccess">
    update t_msg_consume
    set `STATUS`=#{status,jdbcType=SMALLINT},
    update_time=#{updateTime,jdbcType=TIMESTAMP},
    consume_retry = 0
    where id = #{id,jdbcType=VARCHAR}
  </update>

<!--auto generated by MybatisCodeHelper on 2024-10-15-->
  <update id="updateStatusFail">
      update t_msg_consume
      set `STATUS`=#{status,jdbcType=SMALLINT},
          fail_msg=#{failMsg,jdbcType=LONGVARCHAR},
          fail_count =
              fail_count + 1,
          consume_retry=#{consumeRetry,jdbcType=SMALLINT},
          next_retry_time=#{nextRetryTime,jdbcType=TIMESTAMP}
      where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>